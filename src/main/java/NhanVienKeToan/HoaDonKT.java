/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package NhanVienKeToan;

import NhanVienKeToanMo.TaoHDKT;
import NhanVienKeToanMo.CapNhatHDKT;
import NhanVienKeToanMo.TrangChuKT;
import SinhVien.TrangChuSV;
//import com.mycompany.ktx_dba.DangNhap;
//import static com.mycompany.ktx_dba.KTX_DBA.convertDateFormat;
//import static com.mycompany.ktx_dba.KTX_DBA.getConnection;
import static com.mycompany.qlktx.QLKTX.*;
import com.mycompany.qlktx.DangNhap;
import java.sql.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


public class HoaDonKT extends javax.swing.JFrame {
    String maKT = DangNhap.GlobalVariables.username;
    //String maKT = "NV11";
    
    private DefaultTableModel tb;
    /**
     * Creates new form HoaDonKT
     */
    public HoaDonKT() {
        initComponents();
        btBack.setBorderPainted(false); 
        btBack.setContentAreaFilled(false);
        
        thietlapManHinh();
        layDSHoaDon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbAnhWebDev = new javax.swing.JLabel();
        btBack = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lbTTHD = new javax.swing.JLabel();
        lbBL = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbHD = new javax.swing.JTable();
        btTimKiem = new javax.swing.JButton();
        lbGhiChuTTHD = new javax.swing.JLabel();
        ckbThanhToan = new javax.swing.JCheckBox();
        txtMaHD = new javax.swing.JTextField();
        cbLoaiHD = new javax.swing.JComboBox<>();
        lbBL1 = new javax.swing.JLabel();
        btCapNhatHD = new javax.swing.JButton();
        btTaoHD = new javax.swing.JButton();
        btXoaHD = new javax.swing.JButton();
        lbBL2 = new javax.swing.JLabel();
        txtMSSV = new javax.swing.JTextField();
        lbBL3 = new javax.swing.JLabel();
        txtMaPhong = new javax.swing.JTextField();
        txtLHD = new javax.swing.JTextField();
        lbBL4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 3, true));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 80));

        lbAnhWebDev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo.jpg"))); // NOI18N

        btBack.setBackground(new java.awt.Color(254, 254, 254));
        btBack.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btBack.setForeground(new java.awt.Color(255, 255, 255));
        btBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Back.png"))); // NOI18N
        btBack.setBorder(null);
        btBack.setBorderPainted(false);
        btBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btBack)
                .addGap(237, 237, 237)
                .addComponent(lbAnhWebDev, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbAnhWebDev, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btBack)
                .addGap(21, 21, 21))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 80));

        lbTTHD.setBackground(new java.awt.Color(255, 255, 255));
        lbTTHD.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        lbTTHD.setForeground(new java.awt.Color(83, 160, 219));
        lbTTHD.setText("Thông Tin Hoá Đơn");

        lbBL.setBackground(new java.awt.Color(255, 255, 255));
        lbBL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbBL.setText("Mã hóa đơn:");

        tbHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Loại hóa đơn", "Mã phòng", "MSSV", "Giá Tiền", "Ngày lập hóa đơn", "Hạn thanh toán", "Ngày thanh toán"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbHD.setRowHeight(22);
        jScrollPane5.setViewportView(tbHD);

        btTimKiem.setBackground(new java.awt.Color(93, 163, 217));
        btTimKiem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btTimKiem.setText("Tìm Kiếm");
        btTimKiem.setActionCommand("");
        btTimKiem.setBorder(null);
        btTimKiem.setBorderPainted(false);
        btTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTimKiemActionPerformed(evt);
            }
        });

        lbGhiChuTTHD.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbGhiChuTTHD.setText("*Hóa đơn có ngày thanh toán để trống là hóa đơn chưa thanh toán.");

        ckbThanhToan.setBackground(new java.awt.Color(255, 255, 255));
        ckbThanhToan.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ckbThanhToan.setText("Chưa thanh toán");

        txtMaHD.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        cbLoaiHD.setBackground(new java.awt.Color(254, 254, 254));
        cbLoaiHD.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cbLoaiHD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lbBL1.setBackground(new java.awt.Color(255, 255, 255));
        lbBL1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbBL1.setText("Loại hóa đơn:");

        btCapNhatHD.setBackground(new java.awt.Color(93, 163, 217));
        btCapNhatHD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btCapNhatHD.setForeground(new java.awt.Color(255, 255, 255));
        btCapNhatHD.setText("Cập Nhật Hóa Đơn");
        btCapNhatHD.setActionCommand("");
        btCapNhatHD.setBorder(null);
        btCapNhatHD.setBorderPainted(false);
        btCapNhatHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCapNhatHDActionPerformed(evt);
            }
        });

        btTaoHD.setBackground(new java.awt.Color(93, 163, 217));
        btTaoHD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btTaoHD.setForeground(new java.awt.Color(255, 255, 255));
        btTaoHD.setText("Tạo Hóa Đơn");
        btTaoHD.setActionCommand("");
        btTaoHD.setBorder(null);
        btTaoHD.setBorderPainted(false);
        btTaoHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTaoHDActionPerformed(evt);
            }
        });

        btXoaHD.setBackground(new java.awt.Color(93, 163, 217));
        btXoaHD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btXoaHD.setForeground(new java.awt.Color(255, 255, 255));
        btXoaHD.setText("Xóa Hóa Đơn");
        btXoaHD.setActionCommand("");
        btXoaHD.setBorder(null);
        btXoaHD.setBorderPainted(false);
        btXoaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaHDActionPerformed(evt);
            }
        });

        lbBL2.setBackground(new java.awt.Color(255, 255, 255));
        lbBL2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbBL2.setText("MSSV:");

        txtMSSV.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        lbBL3.setBackground(new java.awt.Color(255, 255, 255));
        lbBL3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbBL3.setText("Mã phòng:");

        txtMaPhong.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        txtLHD.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        lbBL4.setBackground(new java.awt.Color(255, 255, 255));
        lbBL4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbBL4.setText("Ngày lập HĐ:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(lbTTHD))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btTaoHD, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btCapNhatHD, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(140, 140, 140)
                                .addComponent(btXoaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtMaHD)
                                            .addComponent(lbBL, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbBL1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbLoaiHD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtMSSV)
                                            .addComponent(lbBL2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtMaPhong)
                                            .addComponent(lbBL3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtLHD)
                                            .addComponent(lbBL4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(ckbThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lbGhiChuTTHD)
                                        .addGap(146, 146, 146)
                                        .addComponent(btTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lbTTHD, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbBL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaHD))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbBL2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMSSV))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lbBL1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbLoaiHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(lbBL3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMaPhong))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(lbBL4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtLHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ckbThanhToan)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbGhiChuTTHD)
                    .addComponent(btTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCapNhatHD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btXoaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btTaoHD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackActionPerformed
        this.dispose();
        TrangChuKT trangchuKT = new TrangChuKT();
        trangchuKT.setVisible(true);
    }//GEN-LAST:event_btBackActionPerformed

    private void btTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTimKiemActionPerformed
        // TODO add your handling code here:
        layDSHoaDon();
    }//GEN-LAST:event_btTimKiemActionPerformed

    private void btCapNhatHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCapNhatHDActionPerformed
        // TODO add your handling code here:
        int indexTB = tbHD.getSelectedRow();
        if (indexTB == -1) {
            JOptionPane.showMessageDialog(null, "Chưa chọn hàng để cập nhật", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String maHD = (String) tb.getValueAt(indexTB, 0);
        CapNhatHDKT cnhdKT = new CapNhatHDKT(maHD);
        cnhdKT.setVisible(true);
    }//GEN-LAST:event_btCapNhatHDActionPerformed

    private void btTaoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTaoHDActionPerformed
        // TODO add your handling code here:
        TaoHDKT thdKT = new TaoHDKT();
        thdKT.setVisible(true);
    }//GEN-LAST:event_btTaoHDActionPerformed

    private void btXoaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaHDActionPerformed
        // TODO add your handling code here:
        int indexTB = tbHD.getSelectedRow();
        if (indexTB == -1) {
            JOptionPane.showMessageDialog(null, "Chưa chọn hàng để xóa", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String maHD = (String) tb.getValueAt(indexTB, 0);
        
        int ret = JOptionPane.showConfirmDialog(null, "Xác nhận xóa?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (ret == JOptionPane.YES_OPTION) {
            Connection con = getConnection();
            if (con != null) {
                try {
                    String sql = "DELETE FROM HOADON WHERE MAHOADON = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, maHD);
                    pst.executeUpdate();
                    pst.close();
                    con.close();

                    layDSHoaDon();
                    JOptionPane.showMessageDialog(this, "Xóa thành công hóa đơn", "Success", JOptionPane.INFORMATION_MESSAGE);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btXoaHDActionPerformed

    public void thietlapManHinh() {
        tb = new DefaultTableModel();
        String tieuDe[] = {"Mã HĐ", "Loại HĐ", "Mã phòng", "MSSV", "Giá tiền", "Ngày lập HĐ", "Hạn thanh toán", "Ngày thanh toán"};
        tb.setColumnIdentifiers(tieuDe);
        tbHD.setModel(tb);
        setVisible(true);
        
        String[] itemsFilterLoaiHD = {"Default", "Sua chua", "Tien dien", "Tien nuoc", "Tien phong"};
        
        DefaultComboBoxModel<String> insertLoaiHD = new DefaultComboBoxModel<>(itemsFilterLoaiHD);
        cbLoaiHD.setModel(insertLoaiHD);

    }
    
    public void layDSHoaDon() {
        String maHD = txtMaHD.getText();
        String loaiHDFilter = (String) cbLoaiHD.getSelectedItem();
        String mssv = txtMSSV.getText();
        String maPhong = txtMaPhong.getText();
        String ngLHD = txtLHD.getText();
        boolean ckThanhToan = ckbThanhToan.isSelected();
                
        Connection con = getConnection();
        if (con == null) {
            JOptionPane.showMessageDialog(this, "Lỗi kết nối cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
        }
            
        try {           
            StringBuilder sql = new StringBuilder("SELECT MAHOADON, MSSV, MAPHONG, SOTIEN, LOAIHOADON, NGAYLAPHOADON, HANTHANHTOAN, NGAYTHANHTOAN FROM HOADON WHERE (MANV = ? OR MANV IS NULL)");
            if (!maHD.isEmpty()) {
                sql.append(" AND MAHOADON = ?");
            }
            if (!"Default".equals(loaiHDFilter)) {
                sql.append(" AND LOAIHOADON = ?");
            }
            if (!mssv.isEmpty()) {
                sql.append(" AND MSSV = ?");
            }
            if (!maPhong.isEmpty()) {
                maPhong = "%" + maPhong + "%";
                sql.append(" AND MAPHONG LIKE ?");
            }if (!ngLHD.isEmpty()) {
                sql.append(" AND NGAYLAPHOADON = TO_DATE(?, 'DD-MM-YYYY')");
            }
            if(ckThanhToan) {
                sql.append(" AND NGAYTHANHTOAN IS NULL");
            }
            sql.append(" ORDER BY MAHOADON");

            PreparedStatement pstmt = con.prepareStatement(sql.toString());
            pstmt.setString(1, maKT);

            int parameterIndex = 2;
            if (!maHD.isEmpty()) {
                pstmt.setString(parameterIndex++, maHD);
            }
            if (!"Default".equals(loaiHDFilter)) {
                pstmt.setString(parameterIndex++, loaiHDFilter);
            }
            if (!mssv.isEmpty()) {
                pstmt.setString(parameterIndex++, mssv);
            }
            if (!maPhong.isEmpty()) {
                pstmt.setString(parameterIndex++, maPhong);
            }
            if (!ngLHD.isEmpty()) {
                pstmt.setString(parameterIndex++, ngLHD);
            }
            
            ResultSet rs = pstmt.executeQuery();
            
            tb.setRowCount(0); // Clear table
            while (rs.next()) {
                String maHoaDon = rs.getString("MAHOADON");
                String maP = rs.getString("MAPHONG");
                String maSSV = rs.getString("MSSV");
                String loaiHD = rs.getString("LOAIHOADON");
                String tienHD = rs.getString("SOTIEN");
                String nLHD = convertDateFormat(rs.getString("NGAYLAPHOADON"));
                String hanHD = convertDateFormat(rs.getString("HANTHANHTOAN"));
                String ngTT = convertDateFormat(rs.getString("NGAYTHANHTOAN"));
                tb.addRow(new Object[]{maHoaDon, loaiHD, maP, maSSV, tienHD, nLHD, hanHD, ngTT});
            }
            //cho giá trị xuất hiện giữa bảng
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
                for (int i = 0; i < tbHD.getColumnCount(); i++) {
                    tbHD.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
                }
            rs.close();
            pstmt.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi trong quá trình truy vấn cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBack;
    private javax.swing.JButton btCapNhatHD;
    private javax.swing.JButton btTaoHD;
    private javax.swing.JButton btTimKiem;
    private javax.swing.JButton btXoaHD;
    private javax.swing.JComboBox<String> cbLoaiHD;
    private javax.swing.JCheckBox ckbThanhToan;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lbAnhWebDev;
    private javax.swing.JLabel lbBL;
    private javax.swing.JLabel lbBL1;
    private javax.swing.JLabel lbBL2;
    private javax.swing.JLabel lbBL3;
    private javax.swing.JLabel lbBL4;
    private javax.swing.JLabel lbGhiChuTTHD;
    private javax.swing.JLabel lbTTHD;
    private javax.swing.JTable tbHD;
    private javax.swing.JTextField txtLHD;
    private javax.swing.JTextField txtMSSV;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaPhong;
    // End of variables declaration//GEN-END:variables
}
