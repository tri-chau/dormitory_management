/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SinhVien;

import static com.mycompany.qlktx.QLKTX.*;
import com.mycompany.qlktx.DangNhap;
import com.mycompany.qlktx.QLKTX;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class CuTruSV extends javax.swing.JFrame {
    String mssv = DangNhap.GlobalVariables.username;
    //String mssv = "00520001";
    
    private DefaultTableModel tb;
    int flag = 0;
    public CuTruSV() {

        initComponents();
        thietlapManHinh();
        layDSCuTru();
        NgayMoi.setVisible(false);
        lbNgay.setVisible(false);
        cbChonPhong.setVisible(false);
        btGui.setVisible(false);
        
        cardPanel.setLayout(new java.awt.CardLayout());
        NgayMoi.setPreferredSize(new Dimension(130, 40));
        cbChonPhong.setPreferredSize(new Dimension(130, 40));
        cardPanel.add(NgayMoi, "NgayMoiCard");
        cardPanel.add(cbChonPhong, "ChonPhongCard");
        cardPanel.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbAnhWebDev = new javax.swing.JLabel();
        btBack = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lbTTCT = new javax.swing.JLabel();
        lbCuTruSV = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbCuTruSV = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lbNgay = new javax.swing.JLabel();
        btGui = new javax.swing.JButton();
        cbYeucau = new javax.swing.JComboBox<>();
        cardPanel = new javax.swing.JPanel();
        NgayMoi = new com.toedter.calendar.JDateChooser();
        cbChonPhong = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 3, true));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 80));

        lbAnhWebDev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logo.jpg"))); // NOI18N

        btBack.setBackground(new java.awt.Color(254, 254, 254));
        btBack.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btBack.setForeground(new java.awt.Color(255, 255, 255));
        btBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Back.png"))); // NOI18N
        btBack.setBorder(null);
        btBack.setBorderPainted(false);
        btBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btBack)
                .addGap(232, 232, 232)
                .addComponent(lbAnhWebDev, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(btBack)
                .addGap(20, 20, 20))
            .addComponent(lbAnhWebDev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 80));

        lbTTCT.setBackground(new java.awt.Color(255, 255, 255));
        lbTTCT.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        lbTTCT.setForeground(new java.awt.Color(83, 160, 219));
        lbTTCT.setText("Thông Tin Cư Trú");

        lbCuTruSV.setBackground(new java.awt.Color(255, 255, 255));
        lbCuTruSV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbCuTruSV.setText("*Phòng để trống ngày trả phòng là phòng hiện đang đăng ký. ");

        tbCuTruSV.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tbCuTruSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã phòng", "Loại phòng", "Giá phòng", "Từ ngày", "Đến ngày", "Ngày trả phòng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCuTruSV.setRowHeight(25);
        jScrollPane5.setViewportView(tbCuTruSV);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Danh sách cư trú:");

        lbNgay.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lbNgay.setText("Ngày:");

        btGui.setBackground(new java.awt.Color(93, 163, 217));
        btGui.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        btGui.setForeground(new java.awt.Color(255, 255, 255));
        btGui.setText("Gửi");
        btGui.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btGui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuiActionPerformed(evt);
            }
        });

        cbYeucau.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbYeucau.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đổi phòng", "Gia hạn phòng", "Trả phòng" }));
        cbYeucau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbYeucauActionPerformed(evt);
            }
        });

        cardPanel.setRequestFocusEnabled(false);
        cardPanel.setVerifyInputWhenFocusTarget(false);

        NgayMoi.setDateFormatString("dd-MM-yyyy");
        NgayMoi.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        cbChonPhong.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbChonPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbChonPhongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardPanelLayout = new javax.swing.GroupLayout(cardPanel);
        cardPanel.setLayout(cardPanelLayout);
        cardPanelLayout.setHorizontalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NgayMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbChonPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cardPanelLayout.setVerticalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardPanelLayout.createSequentialGroup()
                .addComponent(NgayMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbChonPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbCuTruSV)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cbYeucau, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbNgay)))
                        .addGap(35, 35, 35)
                        .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btGui)))
                .addContainerGap(476, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbTTCT)
                .addGap(375, 375, 375))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1039, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lbTTCT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbYeucau, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btGui, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbCuTruSV))
                    .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1101, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1101, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackActionPerformed
        this.dispose();
        TrangChuSV trangchuSV = new TrangChuSV();
        trangchuSV.setVisible(true);
    }//GEN-LAST:event_btBackActionPerformed

    private void btGuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuiActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        
        if(NgayMoi.getDate() == null && flag == 3) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày gia hạn.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int ret = JOptionPane.showConfirmDialog(null, "Xác nhận gửi?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (ret == JOptionPane.YES_OPTION) {
            Connection con = getConnection();
            if (con == null) {
                JOptionPane.showMessageDialog(this, "Lỗi kết nối cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
            }

            try {
                String sql = "{call THEM_PHIEUYEUCAU(?, ?, ?)}";
                CallableStatement cstmt = con.prepareCall(sql);
                cstmt.setString(1, mssv);
                if(flag == 1){
                    cstmt.setInt(2,1);
                    String PhongMoi = (String)cbChonPhong.getSelectedItem();
                    cstmt.setString(3, PhongMoi);
                }
                else if(flag == 2){
                    cstmt.setInt(2,2);
                    String TraPhong = "Trả phòng";
                    cstmt.setString(3, TraPhong);
                }
                else if(flag == 3){
                    cstmt.setInt(2, 3);
                    String ngaymoi = sdf.format(NgayMoi.getDate());
                    cstmt.setString(3, ngaymoi);
                }
                cstmt.execute();
                cstmt.close();
                con.close();
                flag = 0;
                NgayMoi.setDate(null);
                JOptionPane.showMessageDialog(this, "Tạo thành công phiếu yêu cầu", "Success", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Lỗi trong quá trình truy vấn cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btGuiActionPerformed

    private void cbYeucauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbYeucauActionPerformed
        CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
        String loaiYC = (String)cbYeucau.getSelectedItem();
        if(loaiYC.equals("Gia hạn phòng")){
                if(lbNgay.isVisible() && lbNgay.getText().equals("Ngày:")){
                btGui.setVisible(false);
                lbNgay.setVisible(false);
                cardPanel.setVisible(false);

            }
            else if(!lbNgay.isVisible() || (lbNgay.isVisible() && lbNgay.getText().equals("Phòng:"))){
                lbNgay.setText("Ngày:");
                lbNgay.setVisible(true);
                cardPanel.setVisible(true);
                flag = 3;
                cardLayout.show(cardPanel, "NgayMoiCard");
                btGui.setVisible(true);
            }
        }
        else if(loaiYC.equals("Đổi phòng")){
                if(lbNgay.isVisible() && lbNgay.getText().equals("Phòng:")){
                lbNgay.setVisible(false);
                cardPanel.setVisible(false);
                btGui.setVisible(false);

            }
            else if(!lbNgay.isVisible() || (lbNgay.isVisible() && lbNgay.getText().equals("Ngày:"))){
                lbNgay.setText("Phòng:");

                Connection con = QLKTX.getConnection();
                if(con == null) {
                    JOptionPane.showMessageDialog(this,"Lỗi kết nối csdl","Lỗi",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                try{
                String sql = "SELECT MAPHONG FROM PHONG "
                        + "WHERE MATOA = (SELECT MATOA FROM PHONG P JOIN CUTRU C ON P.MAPHONG = C.MAPHONG WHERE C.MSSV = ?) ORDER BY MAPHONG";
                PreparedStatement pst = con.prepareStatement(sql); 
                pst.setString(1, mssv);
                ResultSet rs = pst.executeQuery();
                while(rs.next()){
                    cbChonPhong.addItem(rs.getString("MAPHONG"));
                }
                }catch(SQLException e) {
            e.printStackTrace();
        }
                lbNgay.setVisible(true);
                cardPanel.setVisible(true);
                cardLayout.show(cardPanel, "ChonPhongCard");
                flag = 1;
                btGui.setVisible(true);
            }
        }
        else if(loaiYC.equals("Trả phòng")){
            if(lbNgay.isVisible() && cardPanel.isVisible()){
                lbNgay.setVisible(false);
                cardPanel.setVisible(false);
                flag = 2;
                btGui.setVisible(true);
            }
            else if(!lbNgay.isVisible() && !cardPanel.isVisible() && btGui.isVisible()){
                btGui.setVisible(false);
            }  
            else if(!lbNgay.isVisible() && !cardPanel.isVisible()){
                flag = 2;
                btGui.setVisible(true);
            }  
        }
    }//GEN-LAST:event_cbYeucauActionPerformed

    private void cbChonPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbChonPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbChonPhongActionPerformed
        
    public void thietlapManHinh() {
        tb = new DefaultTableModel();
        String tieuDe[] = {"Mã phòng", "Loại phòng", "Giá Phòng", "Từ ngày", "Đến ngày", "Ngày trả phòng"};
        tb.setColumnIdentifiers(tieuDe);
        
        tbCuTruSV.setModel(tb);
        
        setVisible(true);
    }
    
    public void layDSCuTru() {
        Connection con = getConnection();
        if (con == null) {
            JOptionPane.showMessageDialog(this, "Lỗi kết nối cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
        }
            
        try {           
            String sql = "SELECT P.MAPHONG, P.LOAIPHONG, P.GIATIEN, C.TUNGAY, C.DENNGAY, C.NGAYTRAPHONG FROM PHONG P JOIN CUTRU C ON P.MAPHONG = C.MAPHONG WHERE C.MSSV = ?";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, mssv);
            ResultSet rs = pstmt.executeQuery();
            
            tb.setRowCount(0); // Clear table
            while (rs.next()) {
                String maP = rs.getString("MAPHONG");
                String loaiP = rs.getString("LOAIPHONG");
                String tienP = rs.getString("GIATIEN");
                String tnCT = convertDateFormat(rs.getString("TUNGAY"));
                String dnCT = convertDateFormat(rs.getString("DENNGAY"));
                String traP = convertDateFormat(rs.getString("NGAYTRAPHONG"));
                tb.addRow(new Object[]{maP, loaiP, tienP, tnCT, dnCT, traP});
            }
            rs.close();
            pstmt.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi trong quá trình truy vấn cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser NgayMoi;
    private javax.swing.JButton btBack;
    private javax.swing.JButton btGui;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JComboBox<String> cbChonPhong;
    private javax.swing.JComboBox<String> cbYeucau;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lbAnhWebDev;
    private javax.swing.JLabel lbCuTruSV;
    private javax.swing.JLabel lbNgay;
    private javax.swing.JLabel lbTTCT;
    private javax.swing.JTable tbCuTruSV;
    // End of variables declaration//GEN-END:variables
}
